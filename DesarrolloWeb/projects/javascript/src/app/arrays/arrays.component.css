/* el asterisco (*) representa cualquier etiqueta del dcumento */
* {

  box-sizing: border-box;
  /* con "--" podemos definir valores reutilizables. útil para colores, o tamaños */
  --color-text: black;
  background-color: antiquewhite;
}

body {
  /* si indicamos el tamaño de fuente en el body, se hereda en el resto del contenido */
  font-size: 18px;
  /* es importante que el último valor para el tipo de fuente sea muy genérico,
  para asegurarnos de tener un mínimo de control de cómo se verá la letra,
  aunque nuestras tipografías fallen */
  font-family: Verdana, sans-serif;


}


main {
  /* ver grid-template-areas en .grid-container */
  /* definimos dónde se verá en nuestra template con grid */
  grid-area: main;
  min-height: 600px;
  padding-right: 18px;
}

.grid-container {
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 3fr 1fr;
  grid-template-areas:
      "header header"
      "nav nav"
      "main sidebar"
      "footer footer";
  /* si definimos un ancho máximo y añadimos margin: auto, centraremos el contenedor horizontalmente */
  max-width: 960px;
  margin: auto;
  padding: 18px;
}

.main-header {
  /* ver grid-template-areas en .grid-container */
  /* definimos dónde se verá en nuestra template con grid */
  grid-area: header;
}

.nav {
  /* ver grid-template-areas en .grid-container */
  /* definimos dónde se verá en nuestra template con grid */
  grid-area: nav;
}

/* podemosun elemento dentro de otro indicando los selectores de ambos separados con un espacio
también podemos aplicar los mismos estilos a varios selectores, separándolos con comas (,)
en este caso aplicamos los mismos estilos base al menú principal y el del footer */
.ul-nav ul li ,
.main-footer ul li {
  /* con flex, distribuimos el contenido en horizontal (por defecto, se puede cambiar) */
  display: flex;
  /* espaciado entre elementos */
  gap: 18px;
  /* quitamos el punteado que añade el navegador a las listas */
  list-style: none;
  /* quitamos el espaciado a la izquierda que añade el navegador a las listas */
  padding-left: 0;
}

/* para centrar horizontalmente los elementos de un contenedor flex utilizamos justify-content */
.main-footer ul li {
  justify-content: center;
}

.ul-nav a,
.main-footer a {
  text-decoration: none;
  text-transform: capitalize;
  font-weight: bold;
  /* así (con var) utilizamos el valor que hemos definido previamente */
  color: var(--color-text);
}

/* podemos seleccionar estados de un elemento indicando su selector:estado
por ejemplo, hover, para cuando el cursor está sobre el elemento, en este caso un enlace */
.ul-nav a:hover {
  /* indicamos el ancho del border, el estilo y el color en la misma línea */
  border-bottom: 3px solid var(--color-text);
}

/* en font-size también podemos utilizar palabras reservadas como "small" */
.main-footer a {
  font-size: small;
}







#nav {
  margin:auto;
  width:50px;
  font-family:Arial, Helvetica, sans-serif;
}

ul, li {
  list-style:none;
}

.nav {
  width:500px; /*Le establecemos un ancho*/
  margin:0; /*Centramos automaticamente*/

}

.nav > li {
  float:right;

}

.nav li a {
  background-color:#000;
  color:#fff;
  text-decoration:none;
  padding:10px 12px;
  display:block;
}

.nav li a:hover {
  background-color:#000000;
}

.nav li ul {
  display:none;
  position:absolute;
  min-width:140px;
}

.nav li:hover > ul {
  display:block;
}

.nav li ul li {
  position:relative;
}












.sidebar {
  /* ver grid-template-areas en .grid-container */
  /* definimos dónde se verá en nuestra template con grid */
  grid-area: sidebar;
  border-left: 2px solid #ccc;
  /* el padding es el espaciado de borde para adentro de un elemento */
  padding: auto;
  /* el margin es el espaciado de borde para afuera de un elemento */
  /* margin: 18px; */
}

.main-footer {
  /* ver grid-template-areas en .grid-container */
  /* definimos dónde se verá en nuestra template con grid */
  grid-area: footer;
}

.heading {
  text-align: center;
  /* sombra de texto */
  text-shadow: 2px 2px 2px rgba(255, 255, 255, 0.4);
}

/* ajustamos la imagen al contenedor */
.sidebar-image {
  width: 100%;
  height: auto;
}

.gallery {
  display: grid;
  /* cuando no sabemos cuántos elementos habrá en el contenido */
  grid-auto-rows: auto;
  /* las columnas serán una repetición "repeat()" hasta llenar todo el espacio con los elementos que contenga el grid */
  /* cada elemento será de mínimo 200px y máximo una fracción del contenido (es decir, lo que puede ocupar a partir de ahí) */
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  /* espaciado entre elementos del grid */
  gap: 10px;
}

.gallery img {
  /* el máximo de ancho y altura proporcional */
  width: 100%;
  height: auto;
  /* radio (esquinas redondeadas) del borde */
  border-radius: 10px;
  /* sobra de caja compatible con varios navegadores */
  -webkit-box-shadow: 3px 3px 5px -1px rgba(0, 0, 0, 0.75);
  -moz-box-shadow: 3px 3px 5px -1px rgba(0, 0, 0, 0.75);
  box-shadow: 3px 3px 5px -1px rgba(0, 0, 0, 0.75);
}

/* usamos mediqueries para modificar estilos según el tamaño de pantalla
en este caso aplicaremos otros estilos cuando la pantalla sea más pequeña que la de un iPad mini (768px) */
@media (max-width: 767px) {
  /* solo hace falta añadir los estilos a modificar */
  .grid-container {
      /* ahora el grid solo es de una columna */
      grid-template-columns: 100%;
      grid-template-areas:


      "main"
      "header"

      "footer"
      "nav";

  }


  }



  /* quitamos la altura mínima del main */
  main {
      min-height: auto;
  }

